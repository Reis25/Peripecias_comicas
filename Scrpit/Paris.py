cost_mtz = [[0, 11, 20, 27, 40, 43, 39, 28, 18, 10, 18, 30, 30, 32],
                [11, 0, 9, 16, 29, 32, 28, 19, 11, 4, 17, 23, 21, 24],
                [20, 9, 0, 7, 20, 22, 19, 15, 10, 11, 21, 21, 13, 18],
                [27, 16, 7, 0, 13, 16, 12, 13, 13, 18, 26, 21, 11, 17],
                [40, 29, 20, 13, 0, 3, 2, 21, 25, 31, 38, 27, 16, 20],
                [43, 32, 22, 16, 3, 0, 4, 23, 28, 33, 41, 30, 17, 20],
                [39, 28, 19, 12, 2, 4, 0, 22, 25, 29, 38, 28, 13, 17],
                [28, 19, 15, 13, 21, 23, 22, 0, 9, 22, 18, 7, 25, 30],
                [18, 11, 10, 13, 25, 28, 25, 9, 0, 13, 12, 12, 23, 28],
                [10, 4, 11, 18, 31, 33, 29, 22, 13, 0, 20, 27, 20, 23],
                [18, 17, 21, 26, 38, 41, 28, 18, 12, 20, 0, 15, 35, 39],
                [30, 23, 21, 21, 27, 30, 28, 7, 12, 27, 15, 0, 31, 37],
                [30, 21, 13, 11, 16, 17, 13, 25, 23, 20, 35, 31, 0, 5],
                [32, 24, 18, 17, 20, 20, 17, 30, 28, 23, 39, 37, 5, 0]]

adj_mtz =[[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0],
               [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0],
               [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0],
               [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
               [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],
               [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0],
               [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
               [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]]


lines = {"red": [3, 9, 11, 14], "blue": [1, 2, 3, 4, 5, 6],
"yellow": [2, 5, 7, 8, 9, 19], "green": [4, 8, 12, 13, 14]}

inicial = (5, 0, 'yellow', '')
final = 10

def  filhos(estado):

  returFilhos = []

  color = estado[2] 

  for x in range(14):
      if adj_mtz[estado[0]][x] ==1:
        for colorx in lines:
          if x in lines[colorx]:
            color = colorx
        if color == estado[2]:
          t = (x, estado[1] + cost_mtz[x][estado[0]], estado[2], estado[3] + ' ' + str(estado[0]))
        else:
          t = (x, estado[1] + cost_mtz[x][estado[0]] + 4, colorx, estado[3] + ' ' + str(estado[0]))
        returFilhos.append(t)

  return returFilhos

atual = inicial
solucao = []

while atual[0] != final:
      solucao = solucao + filhos(atual)
      solucao.sort(key = lambda tup : tup[1])
      atual = solucao.pop(0) 

print filhos(inicial)
'''
def fronteira(estado):

  array = filhos(estado[0])

  retur = []

  for x in array:
    s = estado[1] + cost_mtz[x][estado[0]]
    t = (x, s)

'''